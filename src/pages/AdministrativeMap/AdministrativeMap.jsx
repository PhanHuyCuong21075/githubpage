import { useEffect, useState } from "react";
import { Container } from "react-bootstrap";
import { Link, useSearchParams } from "react-router-dom";

import "./AdministrativeMap.scss";

const AdministrativeMap = () => {
  // Kh·ªüi t·∫°o dulieu m·ªôt m·∫£ng r·ªóng
  const [dulieu, setDuLieu] = useState([]);

  const [searchParams] = useSearchParams();
  // L·∫•y location t·ª´ vitri truy·ªÅn qua url
  const provinceId = searchParams.get("provinceId");

  // H√†m l·∫•y danh s√°ch c√°c qu·∫≠n/huy√™n theo m√£ t·ªânh/th√†nh ph·ªë
  const getDistrictByProvinceId = async (provinceId) => {
    try {
      // G·ª≠i y√™u c·∫ßu ƒë·∫øn API l·∫•y danh s√°ch qu·∫≠n/huy·ªán 
      const response = await fetch(`https://api.quyhoach.xyz/list_districts_in_provinces/${provinceId}`);
      const data = await response.json();

      // N·∫øu c√≥ d·ªØ li·ªáu th√¨ tr·∫£ v·ªÅ, ng∆∞·ª£c l·∫°i tr·∫£ v·ªÅ null
      return data.dulieu ? data.dulieu : null;
    } catch (error) {
      console.error('L·ªói khi l·∫•y d·ªØ li·ªáu:', error);
      // G·∫∑p l·ªói tr·∫£ v·ªÅ null
      return null;
    }
  }

  // H√†m tr·∫£ v·ªÅ th√¥ng tin b·∫£n ƒë·ªì h√†nh ch√≠nh qu·∫≠n/huy·ªán
  const getDistrictDetail = async (districtId) => {
    try {
      // G·ª≠i y√™u c·∫ßu ƒë·∫øn API l·∫•y th√¥ng tin b·∫£n ƒë·ªì h√†nh ch√≠nh qu·∫≠n/huy·ªán 
      const response = await fetch(`https://api.quyhoach.xyz/thongtin_wiki_district/${districtId}`);
      const data = await response.json();

      // N·∫øu c√≥ d·ªØ li·ªáu th√¨ tr·∫£ v·ªÅ, ng∆∞·ª£c l·∫°i tr·∫£ v·ªÅ null
      return data.dulieu ? data.dulieu : null;
    } catch (error) {
      console.error('L·ªói khi l·∫•y d·ªØ li·ªáu:', error);
      // G·∫∑p l·ªói tr·∫£ v·ªÅ null
      return null;
    }
  }

  useEffect(() => {
    const fetchData = async () => {
      if (provinceId) {
        const districts = await getDistrictByProvinceId(provinceId);

        if (districts && districts.length > 0) {
          const data = [];
          for (const item of districts) {
            const res = await getDistrictDetail(item.DistrictID);

            // Ki·ªÉm tra xem ·∫£nh c√≥ ph·∫£i ƒëang ·ªü d·∫°ng Json kh√¥ng
            if (typeof res.images === "string") {
              try {
                res.images = JSON.parse(res.images);
              } catch (error) {
                console.error("L·ªói parse JSON:", error);

                // N·∫øu l·ªói, g√°n gi√° tr·ªã l√† m·∫£ng r·ªóng
                res.images = [];
              }
            }

            // Ki·ªÉm tra xem M√¥ T·∫£ c√≥ ph·∫£i ƒëang ·ªü d·∫°ng Json kh√¥ng
            if (typeof res.sections === "string") {
              try {
                // G√°n sections b·∫±ng text Gi·ªõi Thi·ªáu lu√¥n
                res.sections = JSON.parse(res.sections)["Gi·ªõi thi·ªáu"];
              } catch (error) {
                console.error("L·ªói parse JSON:", error);

                // N·∫øu l·ªói, g√°n gi√° tr·ªã l√† m·∫£ng r·ªóng
                res.sections = [];
              }
            }

            // Ki·ªÉm tra xem HOOK_ID c√≥ ph·∫£i ƒëang ·ªü d·∫°ng Json kh√¥ng
            if (typeof res.HOOK_ID === "string") {
              try {
                res.HOOK_ID = JSON.parse(res.HOOK_ID);
              } catch (error) {
                console.error("L·ªói parse JSON:", error);

                // N·∫øu l·ªói, g√°n gi√° tr·ªã l√† object r·ªóng
                res.HOOK_ID = {};
              }
            }

            data.push(res);

            // Ch·ªâ l·∫•y t·ªëi ƒëa 10 b·∫£n ghi
            if (data.length === 10) break;
          }
          if (data && data.length > 0) {
            setDuLieu(data);
          }
        }
      }
    };

    fetchData();
  }, []);

  // H√†m chuy·ªÉn ƒë·ªïi gi·ªù sang gi·ªù Vi·ªát Nam
  const convertToVietnamTime = (gmtString) => {
    // Chuy·ªÉn ƒë·ªïi chu·ªói ng√†y th√°ng t·ª´ GMT sang ƒë·ªëi t∆∞·ª£ng Date
    let date = new Date(gmtString);

    // C·∫•u h√¨nh cho m√∫i gi·ªù Vi·ªát Nam (GMT+7)
    let options = {
      weekday: 'long', // Hi·ªÉn th·ªã th·ª© (Th·ª© Hai, Th·ª© Ba, ...)
      day: 'numeric', // Hi·ªÉn th·ªã ng√†y
      month: 'long', // Hi·ªÉn th·ªã th√°ng (Th√°ng 1, Th√°ng 2, ...)
      year: 'numeric', // Hi·ªÉn th·ªã nƒÉm
      hour: '2-digit', // Gi·ªù c√≥ 2 ch·ªØ s·ªë
      minute: '2-digit', // Ph√∫t c√≥ 2 ch·ªØ s·ªë
      second: '2-digit', // Gi√¢y c√≥ 2 ch·ªØ s·ªë
      timeZone: 'Asia/Ho_Chi_Minh' // M√∫i gi·ªù Vi·ªát Nam
    };

    // Chuy·ªÉn ƒë·ªïi sang chu·ªói ng√†y gi·ªù theo ƒë·ªãnh d·∫°ng ti·∫øng Vi·ªát
    return date.toLocaleString('vi-VN', options);
  }

  return (
    <Container>
      <div style={{ marginBottom: "100px" }}>
        {dulieu ? (
          dulieu.map((item, index) => (
            <div className="map-list" key={index}>
              <div className="map-list__item">
                <img
                  src={item.images && item.images[0]}
                  alt="B·∫£n ƒë·ªì T·ªânh Gia Lai"
                  className="map-list__item-image"
                />
                <div className="map-list__item-info">
                  <h3 className="map-list__item-title">{item.title}</h3>
                  <p className="map-list__item-description">
                    {item.sections}
                  </p>
                  <div className="map-list__item-date-created">üïë {convertToVietnamTime(item.updated_at)}</div>
                  <Link to={`/administrative-maps/${item.HOOK_ID.DistrictID}`} className="map-list__item-link">
                    Xem chi ti·∫øt
                  </Link>

                </div>
              </div>
            </div>
          ))
        ) : (
          <div style={{ color: "white" }}>
            Kh√¥ng c√≥ d·ªØ li·ªáu
          </div>
        )}
      </div>
    </Container>
  );
};

export default AdministrativeMap;